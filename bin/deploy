#!/bin/bash

# Copyright Â© 2016-2018 by madneon
# http://madneon.com

# Check required programs
REQUIRED="sudo git install lsb_release readlink dirname"
MISSING=""
for r in $REQUIRED; do
	which $r > /dev/null
	if [ $? != 0 ]; then
		MISSING="$MISSING $r"
	fi
done
if [ -n "$MISSING" ]; then
	echo Required: $MISSING
	exit 1
fi

set -e

MYPATH=`readlink -f "$0"`
MYPATH=`dirname "$MYPATH"`

D_ROOT=/opt/lib
D_DEPLOY=/opt
DEPLOY_DIRS="bin etc"

LIST="os-mods shell-utils shell-wrappers"
EDITIONS=""

export GIT_DISCOVERY_ACROSS_FILESYSTEM=true

# Functions
function files() {
	if [ -d "$1" ]; then
		cd "$1"
		for f in `find .`; do
			f=`echo $f|cut -c2-`
			if [ -f "$1$f" ]; then
				if [ -e "$2$f" ]; then
					diff -q "$1$f" "$2$f" > /dev/null
					if [ "$?" == "0" ]; then
						echo "SKIPING $2$f"
						continue
					fi
				fi

				# save original file
				if [ ! -d `dirname "$2$f"` ]; then
					sudo install -o $3 -g $4 -m 755 -d `dirname "$2$f"`
				else
					if [ -e "$2$f.original" ]; then
						# dont overwrite
						echo "SKIPING $2$f"
						continue
					else
						if [ -e "$2$f" ]; then
							sudo mv "$2$f" "$2$f.original"
						fi
					fi
				fi

				# deploy
				echo "$2$f"
				sudo cp "$1$f" "$2$f"
				sudo chown "$3"."$4" "$2$f"
			fi
		done
	fi
}

function deploy() {
	set +e
	# Acquire OS info
	os_id=`lsb_release -si`
	os_version=`lsb_release -sr`

	if [ -f "$MYPATH/../editions" ]; then
		EDITIONS=`cat "$MYPATH/../editions"`
	else
		# Try to determine OS editions
		if [ "$os_id"X == "Ubuntu"X ]; then
			dpkg --get-selections|grep ubuntu-server > /dev/null
			if [ $? == 0 ]; then
				EDITIONS="server"
			fi
			dpkg --get-selections|grep ubuntu-desktop > /dev/null
			if [ $? == 0 ]; then
				EDITIONS="desktop"
			fi
		elif [ "$os_id"X == "Raspbian"X -o "$os_id"X == "Debian"X ]; then
			tasksel --list-tasks|grep -q "i desktop"
			if [ $? == 0 ]; then
				EDITIONS="desktop"
			else
				EDITIONS="server"
			fi
		else
			echo "Unknown OS edition, please set \"editions\" file manually."
			read junk
		fi

		# Save
		sudo echo "$EDITIONS" > "$MYPATH/../editions"
	fi

	# before-script
	if [ -x "$fd/run/before" ]; then
		. "$fd/run/before"
	fi

	# apt
	fd="$D_ROOT/os-mods/$os_id/$os_version"
	for e in $EDITIONS; do
		if [ -f "$fd/apt/install-$e" ]; then
			sudo apt -y install `cat "$fd/apt/install-$e"`
			sudo apt -y purge `cat "$fd/apt/remove-$e"`
		fi
	done

	sudo apt update
	sudo apt -y autoremove

	# deploy /
	files "$fd/files" "" 0 0

	# deploy skel to users
	UID_MIN=$((`grep ^UID_MIN /etc/login.defs|cut -f2-` + 0))
	UID_MAX=$((`grep ^UID_MAX /etc/login.defs|cut -f2-` + 0))
	if [ -z $UID_MIN ]; then
		UID_MIN=1000
	fi
	if [ -z $UID_MAX ]; then
		UID_MAX=60000
	fi

	for l in `cut -f1,3,4,6 -d: /etc/passwd`; do
		u=`echo $l|cut -f1 -d:`
		uid=`echo $l|cut -f2 -d:`
		gid=`echo $l|cut -f3 -d:`
		h=`echo $l|cut -f4 -d:`

		if [ -n "$uid" -a "$uid" -ge $UID_MIN -a "$uid" -le $UID_MAX ]; then
			files "/etc/skel" "$h" "$uid" "$gid"
		fi
	done

	# after-script
	if [ -x "$fd/run/after" ]; then
		. "$fd/run/after"
	fi
}

function fix() {
	for d in $DEPLOY_DIRS; do
		if [ ! -d "$D_DEPLOY/$d" ]; then
			sudo install -o root -g root -m 755 -d $D_DEPLOY/$d
		fi

		if [ -d "$D_ROOT/$1/$d" ]; then
			for f in `find "$D_ROOT/$1/$d"`; do
				if [ -f $f ]; then
					fn=`basename $f`
					sudo ln -fs $f "$D_DEPLOY/$d/$fn"
				fi
			done
		fi
	done
}

function download() {
	sudo git clone "https://github.com/madneon/$1.git" "$D_ROOT/$1"
	fix "$1"
}

function update() {
	sudo git --git-dir="$D_ROOT/$1/.git" --work-tree="$D_ROOT/$1" pull
	fix "$1"
}

if [ "$MYPATH" == "$D_ROOT/os-deploy/bin" ]; then
	if [ -f "$MYPATH/../list" ]; then
		LIST=`cat "$MYPATH/../list"`
	fi

	for p in $LIST; do
		if [ ! -d "$D_ROOT/$p" ]; then
			download "$p"
		else
			update "$p"
		fi
	done

	deploy
else
	# Download itself
	if [ ! -d "$D_ROOT" ]; then
		sudo install -o root -g root -m 755 -d "$D_ROOT"
	fi

	download os-deploy

	# Run downloaded
	sudo "$D_ROOT/os-deploy/bin/deploy"
fi

# madneon 2016-11-16, 2018-06-17, 2018-10-02
